<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Test_AssertEquals_STRING" Id="{f5e8ff1c-b2ae-4a9a-9fdb-8740ac34d0de}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_AssertEquals_STRING EXTENDS T_UnitTestBase
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Init" Id="{97a05018-fd7c-48ad-a4ec-b1644d2d2e41}">
      <Declaration><![CDATA[METHOD Init
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="RunTest" Id="{a563b797-bab5-4cce-9185-03ee0f3eafd2}">
      <Declaration><![CDATA[METHOD RunTest
VAR_OUTPUT
    TestCompleted : BOOL;
    TestFailed    : BOOL;
END_VAR
VAR_INST
    TestValue       : T_MaxString;
    Actual          : T_MaxString;
    AssertionResult : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TestValue := 'Bob';
Actual    := 'bob';

AssertEquals_STRING(Source   := THIS^.TestName,
                    Expected := TestValue,
                    Actual   := Actual,
                    Message  := 'TestValue <> Actual Value - expected!',
                    Failed   => AssertionResult);

AssertTrue(Source    := THIS^.TestName,
           Condition := AssertionResult, // true expected - strings were different
           Message   := 'AssertEquals_STRING failed to detect a difference',
           Failed    => TestFailed);

TestCompleted := TRUE;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>